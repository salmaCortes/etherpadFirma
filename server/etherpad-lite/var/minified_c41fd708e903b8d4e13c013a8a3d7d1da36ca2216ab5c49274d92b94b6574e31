require.define({"ep_line_spacing/static/js/index.js": {"(module ep_line_spacing/static/js/index.js)": function (require, exports, module) {"use strict";const spacings=["auto","1.5","2.5","3.2","6.4"],range=(s,t)=>Array.from(Array(Math.abs(t-s)+1),(i,e)=>s+e);exports.postAceInit=(s,t)=>{$("#line-spacing, select.line-spacing-selection").on("change",function(){const e=$(this).val();t.ace.callWithAce(n=>{n.ace_lineSpacing(e)},"insertSpacingHeight",!0)})},exports.aceInitialized=(s,t)=>{t.editorInfo.ace_lineSpacing=i=>{const e=t.rep,n=t.documentAttributeManager;if(!(e.selStart&&e.selEnd)||i>=0&&spacings[i]===void 0)return;const r=e.selStart[0],a=Math.max(r,e.selEnd[0]-(e.selEnd[1]===0?1:0));range(r,a).forEach(o=>{i>=0?n.setAttributeOnLine(o,"lineHeight",spacings[i]):n.removeAttributeOnLine(o,"lineHeight")})}},exports.aceDomLineProcessLineAttributes=(s,t)=>{const i=t.cls,e=/(?:^| )lineHeight:([A-Za-z.0-9]*)/.exec(i);let n;if(e!==null&&e.length>=0)n=spacings.indexOf(e[1]);else return;if(n!==void 0&&n>=0){const r=spacings[n],a=`width:100%;margin:0 auto;list-style-position:inside;display:block;line-height:${r}`;return[{preHtml:`<lineHeight-${r} style="${a}">`,postHtml:`</lineHeight-${r}>`,processedMarker:!0}]}return[]},exports.aceAttribsToClasses=(s,t)=>{if(t.key==="lineHeight")return[`lineHeight:${t.value}`]};
}}["(module ep_line_spacing/static/js/index.js)"],
});

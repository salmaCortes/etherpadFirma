require.define({"ep_font_size/static/js/index.js": {"(module ep_font_size/static/js/index.js)": function (require, exports, module) {"use strict";const shared=require("./shared");exports.postAceInit=(n,e)=>{const s=$("#font-size, select.size-selection");s.on("change",function(){const t=$(this).val(),i=parseInt(t,10);isNaN(i)||(e.ace.callWithAce(o=>{o.ace_doInsertsizes(i)},"insertsize",!0),s.val("dummy"))}),$(".font_size").hover(()=>{$(".submenu > .size-selection").attr("size",6),$(".submenu > #font-size").attr("size",6)}),$(".font-size-icon").click(()=>{$("#font-size").toggle()})},exports.aceAttribsToClasses=(n,e)=>{if(e.key.indexOf("font-size:")!==-1)return[`font-size:${/(?:^| )font-size:([A-Za-z0-9]*)/.exec(e.key)[1]}`];if(e.key==="font-size")return[`font-size:${e.value}`]},exports.aceCreateDomLine=(n,e)=>{const s=e.cls,[,t]=/(?:^| )font-size:([A-Za-z0-9]*)/.exec(s)||[];return t==null?[]:shared.sizes.indexOf(t)<0?[]:[{extraOpenTags:"",extraCloseTags:"",cls:s}]},exports.aceInitialized=(n,e)=>{e.editorInfo.ace_doInsertsizes=s=>{const{rep:t,documentAttributeManager:i}=e;if(!(t.selStart&&t.selEnd)||s>=0&&shared.sizes[s]===void 0)return;const o=["font-size",s>=0?shared.sizes[s]:""];i.setAttributesOnRange(t.selStart,t.selEnd,[o])}},exports.aceEditorCSS=()=>["ep_font_size/static/css/size.css"],exports.postToolbarInit=(n,e)=>{e.toolbar.registerCommand("fontSize",(s,t,i)=>{$("#font-size").toggle()})};
}}["(module ep_font_size/static/js/index.js)"],
});

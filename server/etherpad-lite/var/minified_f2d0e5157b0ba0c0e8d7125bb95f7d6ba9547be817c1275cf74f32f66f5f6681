require.define({"ep_font_family/static/js/index.js": {"(module ep_font_family/static/js/index.js)": function (require, exports, module) {"use strict";const fonts=["fontarial","fontavant-garde","fontbookman","fontcalibri","fontcourier","fontgaramond","fonthelvetica","fontmonospace","fontpalatino","fonttimes-new-roman"];exports.postAceInit=(a,e)=>{const t=$("select.family-selection");$.each(fonts,(s,o)=>{o=o.substring(4);let n=capitaliseFirstLetter(o);n=n.split("-").join(" "),t.append($("<option>").attr("value",`font${o}`).text(n))}),t.niceSelect("update"),t.on("change",function(){const s=$(this).val();e.ace.callWithAce(o=>{$.each(fonts,(n,i)=>{o.ace_setAttributeOnSelection(i,!1)}),o.ace_setAttributeOnSelection(s,!0)},"insertfontFamily",!0)})},exports.aceEditEvent=(a,e)=>{const t=e.callstack;if(t.type!=="handleClick"&&t.type!=="handleKeyEvent"&&!t.docTextChanged||t.type==="setBaseText"||t.type==="setup")return!1;setTimeout(()=>{$(".family-selection").val("dummy"),e.rep.selStart[1]!==0&&(e.rep.selStart[1]===1&&e.rep.alltext[0]==="*"||($(".subscript > a").removeClass("activeButton"),$.each(fonts,(s,o)=>{e.editorInfo.ace_getAttributeOnSelection(o)&&$(".family-selection").val(o)})))},250)},exports.aceAttribsToClasses=(a,e)=>{if(fonts.indexOf(e.key)!==-1)return[e.key]},exports.aceRegisterBlockElements=()=>fonts,exports.aceAttribClasses=(a,e)=>($.each(fonts,(t,s)=>{e[s]=`tag:${s}`}),e),exports.aceEditorCSS=(a,e)=>["/ep_font_family/static/css/fonts.css"];const capitaliseFirstLetter=a=>a.charAt(0).toUpperCase()+a.slice(1);
}}["(module ep_font_family/static/js/index.js)"],
});

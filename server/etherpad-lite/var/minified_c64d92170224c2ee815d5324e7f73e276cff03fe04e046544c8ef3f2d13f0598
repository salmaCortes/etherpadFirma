require.define({"ep_authorship_toggle/static/js/clientHooks.js": {"(module ep_authorship_toggle/static/js/clientHooks.js)": function (require, exports, module) {"use strict";exports.postToolbarInit=(d,o,c)=>{const e=o.toolbar,r=$(window),a=$("iframe[name=ace_outer]").contents().find("iframe[name=ace_inner]").contents().find("#innerdocbody"),p=$("#editorcontainer"),g=$("#editbar"),t=$("#epAuthorshipToggleAuthorList"),s=t.find("#authorsList"),i=()=>{t.css("top",`${g.outerHeight()}px`),p.css("top",t.offset().top+t.outerHeight())};return e.registerCommand("epAuthorshipToggle",()=>{const b=t.is(":visible");if(a.toggleClass("authorColors"),b)r.off("resize",i),t.toggle();else{r.on("resize",i),s.empty();const n=clientVars.collab_client_vars.historicalAuthorData;for(const h in n)if(n[h]){const u=n[h],f=$('<span class="author"/>').css("background-color",clientVars.colorPalette[u.colorId]).text(u.name);s.append(f),s.append("<span>, </span>")}s.find("span").last().remove(),Object.keys(n).length&&(t.toggle(),i())}}),c()},exports.aceSetAuthorStyle=(d,o)=>{const e=clientVars.collab_client_vars.historicalAuthorData[o.author];if(e&&e.colorId){const r=clientVars.colorPalette[e.colorId],l=o.dynamicCSS.selectorStyle(o.authorSelector),a=o.parentDynamicCSS.selectorStyle(o.authorSelector);return l.backgroundColor=r,a.backgroundColor=r,1}};
}}["(module ep_authorship_toggle/static/js/clientHooks.js)"],
});

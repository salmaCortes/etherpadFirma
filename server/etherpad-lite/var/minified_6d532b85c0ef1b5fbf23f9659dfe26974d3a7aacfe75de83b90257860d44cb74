require.define({"ep_comments_page/static/js/newComment.js": {"(module ep_comments_page/static/js/newComment.js)": function (require, exports, module) {"use strict";const commentL10n=require("ep_comments_page/static/js/commentL10n");let $newComment=$();const buildCommentFrom=e=>{const n=e.find(".comment-content").val(),t=e.find(".from-value").text(),m=e.find(".to-value").val()||null,o={};return o.text=n,m&&(o.changeFrom=t,o.changeTo=m),o},cancelNewComment=()=>{hideNewCommentPopup()},submitNewComment=e=>{const t=buildCommentFrom($newComment);return t.text.length>0||t.changeTo&&t.changeTo.length>0?($newComment.find(".comment-content, .to-value").removeClass("error"),hideNewCommentPopup(),e(t,0)):(t.text.length===0&&$newComment.find(".comment-content").addClass("error"),t.changeTo&&t.changeTo.length===0&&$newComment.find(".to-value").addClass("error")),!1},localizenewCommentPopup=()=>{$newComment.length!==0&&commentL10n.localize($newComment)},insertNewCommentPopupIfDontExist=(e,n)=>($newComment.remove(),e.commentId="",$newComment=$("#newCommentTemplate").tmpl(e),$newComment.appendTo($("#editorcontainerbox")),localizenewCommentPopup(),$newComment.find(".suggestion-checkbox").change(function(){$newComment.find(".suggestion").toggle($(this).is(":checked"))}),$newComment.find("#comment-reset").on("click",()=>{cancelNewComment()}),$newComment.on("submit",t=>(t.preventDefault(),submitNewComment(n))),$newComment),showNewCommentPopup=e=>{e=e||[];let n=e[0];$(".toolbar .addComment").length&&(n=$(".toolbar .addComment").offset().left);const t=e[1];$newComment.css("left",n),n===e[0]&&$newComment.css("top",t),$newComment.find(".suggestion-checkbox").prop("checked",!1).trigger("change"),$newComment.find("textarea").val(""),$newComment.find(".comment-content, .to-value").removeClass("error"),$newComment.addClass("popup-show"),$newComment.find(".comment-content").focus(),pad.plugins.ep_comments_page.preCommentMarker.markSelectedText()},hideNewCommentPopup=()=>{$newComment.removeClass("popup-show"),$newComment.find(":focus").blur(),pad.plugins.ep_comments_page.preCommentMarker.unmarkSelectedText()};exports.localizenewCommentPopup=localizenewCommentPopup,exports.insertNewCommentPopupIfDontExist=insertNewCommentPopupIfDontExist,exports.showNewCommentPopup=showNewCommentPopup,exports.hideNewCommentPopup=hideNewCommentPopup;
}}["(module ep_comments_page/static/js/newComment.js)"],
});
